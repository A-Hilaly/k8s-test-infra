# Test jobs generated by build_jobs.py (do not manually edit)
# 537 jobs, total of 1397 runs per week
periodics:

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-amzn2-k22-docker
  cron: '14 8 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-amzn2-k22-ko23-docker
  cron: '26 17 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-amzn2-k22-ko24-docker
  cron: '11 16 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-amzn2-k23-docker
  cron: '4 6 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-amzn2-k23-ko23-docker
  cron: '47 20 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-amzn2-k23-ko24-docker
  cron: '6 5 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-deb10-k22-docker
  cron: '10 0 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-deb10-k22-ko23-docker
  cron: '21 22 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-deb10-k22-ko24-docker
  cron: '48 23 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-deb10-k23-docker
  cron: '24 6 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-deb10-k23-ko23-docker
  cron: '48 11 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-deb10-k23-ko24-docker
  cron: '9 18 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-flatcar-k22-docker
  cron: '54 4 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-flatcar-k22-ko23-docker
  cron: '41 9 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-flatcar-k22-ko24-docker
  cron: '28 16 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-flatcar-k23-docker
  cron: '0 2 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-flatcar-k23-ko23-docker
  cron: '36 12 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-flatcar-k23-ko24-docker
  cron: '37 21 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-rhel8-k22-docker
  cron: '17 7 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-rhel8-k22-ko23-docker
  cron: '0 15 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-rhel8-k22-ko24-docker
  cron: '57 6 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-rhel8-k23-docker
  cron: '31 9 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-rhel8-k23-ko23-docker
  cron: '45 18 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-rhel8-k23-ko24-docker
  cron: '32 19 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-u2004-k22-docker
  cron: '15 21 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-u2004-k22-ko23-docker
  cron: '34 9 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-u2004-k22-ko24-docker
  cron: '15 16 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-u2004-k23-docker
  cron: '29 3 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-u2004-k23-ko23-docker
  cron: '23 4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-u2004-k23-ko24-docker
  cron: '54 21 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-u2204-k22-docker
  cron: '2 16 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2204-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-u2204-k22-ko23-docker
  cron: '47 0 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2204-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-u2204-k22-ko24-docker
  cron: '22 1 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2204-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-u2204-k23-docker
  cron: '8 6 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2204-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-u2204-k23-ko23-docker
  cron: '54 21 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2204-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-u2204-k23-ko24-docker
  cron: '35 4 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=kubenet --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2204-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k22-docker
  cron: '4 0 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k22-ko23-docker
  cron: '20 19 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k22-ko24-docker
  cron: '53 10 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k23-docker
  cron: '2 22 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k23-ko23-docker
  cron: '9 6 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k23-ko24-docker
  cron: '36 15 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k22-docker
  cron: '24 8 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k22-ko23-docker
  cron: '19 20 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k22-ko24-docker
  cron: '38 13 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k23-docker
  cron: '22 6 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k23-ko23-docker
  cron: '22 9 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k23-ko24-docker
  cron: '19 16 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k22-docker
  cron: '16 18 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k22-ko23-docker
  cron: '27 3 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k22-ko24-docker
  cron: '58 10 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k23-docker
  cron: '6 4 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k23-ko23-docker
  cron: '54 6 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k23-ko24-docker
  cron: '47 23 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k22-docker
  cron: '7 23 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k22-ko23-docker
  cron: '50 5 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k22-ko24-docker
  cron: '39 12 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k23-docker
  cron: '41 9 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k23-ko23-docker
  cron: '3 16 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k23-ko24-docker
  cron: '26 17 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k22-docker
  cron: '1 21 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k22-ko23-docker
  cron: '44 3 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k22-ko24-docker
  cron: '53 18 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k23-docker
  cron: '39 11 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k23-ko23-docker
  cron: '53 14 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k23-ko24-docker
  cron: '36 7 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k22-docker
  cron: '24 8 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k22-ko23-docker
  cron: '9 2 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k22-ko24-docker
  cron: '20 11 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k23-docker
  cron: '58 14 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k23-ko23-docker
  cron: '8 15 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k23-ko24-docker
  cron: '45 22 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=calico --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k22-docker
  cron: '26 18 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k22-ko23-docker
  cron: '42 5 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k22-ko24-docker
  cron: '39 4 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k23-docker
  cron: '36 4 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k23-ko23-docker
  cron: '35 16 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k23-ko24-docker
  cron: '54 17 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k22-docker
  cron: '14 18 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k22-ko23-docker
  cron: '49 18 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k22-ko24-docker
  cron: '44 3 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k23-docker
  cron: '56 4 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k23-ko23-docker
  cron: '4 15 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k23-ko24-docker
  cron: '9 6 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k22-docker
  cron: '44 10 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k22-ko23-docker
  cron: '25 13 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k22-ko24-docker
  cron: '20 20 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k23-docker
  cron: '38 20 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k23-ko23-docker
  cron: '28 8 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k23-ko24-docker
  cron: '1 17 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k22-docker
  cron: '41 13 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k22-ko23-docker
  cron: '36 19 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k22-ko24-docker
  cron: '1 18 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k23-docker
  cron: '39 11 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k23-ko23-docker
  cron: '21 22 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k23-ko24-docker
  cron: '52 7 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k22-docker
  cron: '35 15 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k22-ko23-docker
  cron: '6 21 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k22-ko24-docker
  cron: '39 20 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k23-docker
  cron: '53 9 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k23-ko23-docker
  cron: '27 8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k23-ko24-docker
  cron: '2 17 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k22-docker
  cron: '14 2 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k22-ko24-docker
  cron: '54 13 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k23-docker
  cron: '4 12 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k23-ko24-docker
  cron: '15 16 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=cilium --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k22-docker
  cron: '36 15 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k22-ko23-docker
  cron: '46 4 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k22-ko24-docker
  cron: '7 13 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k23-docker
  cron: '26 9 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k23-ko23-docker
  cron: '43 17 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k23-ko24-docker
  cron: '38 8 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k22-docker
  cron: '16 15 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k22-ko23-docker
  cron: '53 11 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k22-ko24-docker
  cron: '8 10 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k23-docker
  cron: '6 17 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k23-ko23-docker
  cron: '4 6 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k23-ko24-docker
  cron: '17 15 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k22-docker
  cron: '49 1 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k22-ko23-docker
  cron: '7 6 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k22-ko24-docker
  cron: '14 7 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k23-docker
  cron: '51 15 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k23-ko23-docker
  cron: '22 3 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k23-ko24-docker
  cron: '11 10 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k22-docker
  cron: '39 16 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k22-ko23-docker
  cron: '56 10 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k22-ko24-docker
  cron: '45 19 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k23-docker
  cron: '17 22 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k23-ko23-docker
  cron: '25 7 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k23-ko24-docker
  cron: '8 22 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k22-docker
  cron: '17 10 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k22-ko23-docker
  cron: '18 4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k22-ko24-docker
  cron: '35 21 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k23-docker
  cron: '31 4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k23-ko23-docker
  cron: '3 17 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k23-ko24-docker
  cron: '10 16 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k22-docker
  cron: '40 23 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k22-ko23-docker
  cron: '43 13 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k22-ko24-docker
  cron: '22 4 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k23-docker
  cron: '38 17 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k23-ko23-docker
  cron: '14 8 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k23-ko24-docker
  cron: '3 17 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=cilium-etcd --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k22-docker
  cron: '5 14 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k22-ko23-docker
  cron: '0 11 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k22-ko24-docker
  cron: '25 18 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k23-docker
  cron: '39 8 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k23-ko23-docker
  cron: '5 6 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k23-ko24-docker
  cron: '36 7 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k22-docker
  cron: '41 14 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k22-ko23-docker
  cron: '35 20 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k22-ko24-docker
  cron: '30 13 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k23-docker
  cron: '19 8 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k23-ko23-docker
  cron: '26 17 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k23-ko24-docker
  cron: '43 0 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k22-docker
  cron: '42 19 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k22-ko23-docker
  cron: '52 20 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k22-ko24-docker
  cron: '13 13 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k23-docker
  cron: '48 13 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k23-ko23-docker
  cron: '53 1 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k23-ko24-docker
  cron: '48 8 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k22-docker
  cron: '54 17 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k22-ko23-docker
  cron: '18 21 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k22-ko24-docker
  cron: '43 20 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k23-docker
  cron: '48 7 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k23-ko23-docker
  cron: '19 16 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k23-ko24-docker
  cron: '2 9 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k22-docker
  cron: '24 11 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k22-ko23-docker
  cron: '16 11 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k22-ko24-docker
  cron: '29 10 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k23-docker
  cron: '14 13 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k23-ko23-docker
  cron: '49 22 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k23-ko24-docker
  cron: '24 15 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k22-docker
  cron: '53 6 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k22-ko23-docker
  cron: '13 2 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k22-ko24-docker
  cron: '20 11 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k23-docker
  cron: '55 0 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k23-ko23-docker
  cron: '36 15 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k23-ko24-docker
  cron: '21 14 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=flannel --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k22-docker
  cron: '52 16 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k22-ko23-docker
  cron: '54 9 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k22-ko24-docker
  cron: '51 8 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k23-docker
  cron: '30 22 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k23-ko23-docker
  cron: '35 4 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k23-ko24-docker
  cron: '26 21 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k22-docker
  cron: '4 0 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k22-ko23-docker
  cron: '45 6 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k22-ko24-docker
  cron: '28 7 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k23-docker
  cron: '22 14 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k23-ko23-docker
  cron: '40 3 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k23-ko24-docker
  cron: '1 18 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k22-docker
  cron: '59 7 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k22-ko23-docker
  cron: '56 23 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k22-ko24-docker
  cron: '13 6 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k23-docker
  cron: '17 17 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k23-ko23-docker
  cron: '53 18 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k23-ko24-docker
  cron: '44 19 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k22-docker
  cron: '29 21 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k22-ko23-docker
  cron: '30 1 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k22-ko24-docker
  cron: '43 8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k23-docker
  cron: '47 3 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k23-ko23-docker
  cron: '43 12 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k23-ko24-docker
  cron: '26 13 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k22-docker
  cron: '56 0 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k22-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k22-ko23-docker
  cron: '55 8 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k22-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k22-ko24-docker
  cron: '10 9 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k22-ko24-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k23-docker
  cron: '50 22 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k23-ko23-docker
  cron: '14 5 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k23-ko23-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k23-ko24-docker
  cron: '51 20 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=kopeio --container-runtime=docker" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k23-ko24-docker

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-amzn2-k22
  cron: '4 19 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-amzn2-k22-ko23
  cron: '1 0 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-amzn2-k22-ko24
  cron: '46 3 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-amzn2-k23
  cron: '42 21 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-amzn2-k23-ko23
  cron: '28 5 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-amzn2-k23-ko24
  cron: '15 22 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-amzn2-k24
  cron: '5 14 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-amzn2-k24-ko24
  cron: '7 22 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-amzn2-k25
  cron: '11 16 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-deb10-k22
  cron: '49 18 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-deb10-k22-ko23
  cron: '56 13 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-deb10-k22-ko24
  cron: '59 14 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-deb10-k23
  cron: '35 20 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-deb10-k23-ko23
  cron: '17 8 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-deb10-k23-ko24
  cron: '58 19 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-deb10-k24
  cron: '24 15 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-deb10-k24-ko24
  cron: '58 3 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-deb10-k25
  cron: '30 1 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-flatcar-k22
  cron: '58 1 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-flatcar-k22-ko23
  cron: '48 14 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-flatcar-k22-ko24
  cron: '19 5 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-flatcar-k23
  cron: '8 23 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-flatcar-k23-ko23
  cron: '25 3 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-flatcar-k23-ko24
  cron: '34 16 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-flatcar-k24
  cron: '35 12 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-flatcar-k24-ko24
  cron: '46 0 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-flatcar-k25
  cron: '9 18 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-rhel8-k22
  cron: '17 22 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-rhel8-k22-ko23
  cron: '56 9 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-rhel8-k22-ko24
  cron: '11 2 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-rhel8-k23
  cron: '23 0 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-rhel8-k23-ko23
  cron: '5 20 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-rhel8-k23-ko24
  cron: '10 7 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-rhel8-k24
  cron: '12 19 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-rhel8-k24-ko24
  cron: '2 7 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-rhel8-k25
  cron: '58 5 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-u2004-k22
  cron: '47 4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-u2004-k22-ko23
  cron: '54 15 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-u2004-k22-ko24
  cron: '37 4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-u2004-k23
  cron: '49 2 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-u2004-k23-ko23
  cron: '19 2 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-u2004-k23-ko24
  cron: '52 1 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-u2004-k24
  cron: '6 1 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-u2004-k24-ko24
  cron: '16 1 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-u2004-k25
  cron: '40 15 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-u2204-k22
  cron: '54 21 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2204-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-u2204-k22-ko23
  cron: '37 8 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2204-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-u2204-k22-ko24
  cron: '58 11 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2204-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-u2204-k23
  cron: '0 11 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2204-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kubenet"}
- name: e2e-kops-grid-u2204-k23-ko23
  cron: '20 5 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2204-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-u2204-k23-ko24
  cron: '47 6 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2204-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-u2204-k24
  cron: '7 16 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2204-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kubenet"}
- name: e2e-kops-grid-u2204-k24-ko24
  cron: '15 14 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2204-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-u2204-k25
  cron: '45 14 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2204-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k22
  cron: '0 14 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k22-ko23
  cron: '39 12 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k22-ko24
  cron: '56 15 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k23
  cron: '46 16 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k23-ko23
  cron: '34 1 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k23-ko24
  cron: '45 10 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k24
  cron: '49 11 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k24-ko24
  cron: '5 10 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k25
  cron: '31 5 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k22
  cron: '9 7 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k22-ko23
  cron: '50 1 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k22-ko24
  cron: '29 18 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k23
  cron: '3 17 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k23-ko23
  cron: '55 20 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k23-ko24
  cron: '32 23 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k24
  cron: '4 2 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k24-ko24
  cron: '12 23 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k25
  cron: '30 20 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k22
  cron: '18 4 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k22-ko23
  cron: '22 6 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k22-ko24
  cron: '57 13 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k23
  cron: '20 10 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k23-ko23
  cron: '7 19 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k23-ko24
  cron: '56 8 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k24
  cron: '19 17 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k24-ko24
  cron: '12 8 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k25
  cron: '45 7 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k22
  cron: '13 3 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k22-ko23
  cron: '2 13 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k22-ko24
  cron: '25 14 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k23
  cron: '47 5 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k23-ko23
  cron: '31 8 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k23-ko24
  cron: '48 11 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k24
  cron: '48 14 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k24-ko24
  cron: '16 19 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k25
  cron: '34 16 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k22
  cron: '43 17 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k22-ko23
  cron: '48 11 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k22-ko24
  cron: '3 16 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k23
  cron: '5 15 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k23-ko23
  cron: '25 14 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k23-ko24
  cron: '54 13 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k24
  cron: '2 4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k24-ko24
  cron: '46 13 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k25
  cron: '0 2 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k22
  cron: '26 16 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k22-ko23
  cron: '39 20 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k22-ko24
  cron: '36 7 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k23
  cron: '48 6 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k23-ko23
  cron: '22 9 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k23-ko24
  cron: '37 2 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k24
  cron: '43 13 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k24-ko24
  cron: '49 2 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2204-k25
  cron: '25 3 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=calico --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2204-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k22
  cron: '14 12 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k22-ko23
  cron: '31 8 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k22-ko24
  cron: '24 19 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k23
  cron: '28 18 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k23-ko23
  cron: '6 21 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k23-ko24
  cron: '25 14 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k24
  cron: '59 1 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k24-ko24
  cron: '1 22 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-amzn2-k25
  cron: '41 23 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-amzn2-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k22
  cron: '15 13 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k22-ko23
  cron: '58 5 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k22-ko24
  cron: '37 14 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k23
  cron: '17 19 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k23-ko23
  cron: '23 0 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k23-ko24
  cron: '16 19 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k24
  cron: '22 8 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k24-ko24
  cron: '48 19 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k25
  cron: '8 14 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k22
  cron: '53 19 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k22-ko23
  cron: '36 20 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k22-ko24
  cron: '35 23 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k23
  cron: '43 21 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k23-ko23
  cron: '41 9 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k23-ko24
  cron: '26 10 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k24
  cron: '24 14 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k24-ko24
  cron: '38 10 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k25
  cron: '22 8 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k22
  cron: '11 1 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k22-ko23
  cron: '26 9 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k22-ko24
  cron: '29 10 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k23
  cron: '53 23 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k23-ko23
  cron: '31 12 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k23-ko24
  cron: '52 7 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k24
  cron: '58 12 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k24-ko24
  cron: '8 7 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k25
  cron: '4 2 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k22
  cron: '25 11 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k22-ko23
  cron: '56 15 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k22-ko24
  cron: '27 4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k23
  cron: '31 5 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k23-ko23
  cron: '9 2 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k23-ko24
  cron: '6 9 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k24
  cron: '48 6 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k24-ko24
  cron: '54 1 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k25
  cron: '18 8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k22
  cron: '40 18 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k22-ko24
  cron: '44 11 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k23
  cron: '38 20 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k23-ko24
  cron: '53 14 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k24
  cron: '5 15 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k24-ko24
  cron: '1 14 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2204-k25
  cron: '11 1 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2204-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k22
  cron: '16 3 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k22-ko23
  cron: '58 3 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k22-ko24
  cron: '5 0 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k23
  cron: '26 13 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k23-ko23
  cron: '43 22 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k23-ko24
  cron: '48 13 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k24
  cron: '53 14 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k24-ko24
  cron: '56 21 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-amzn2-k25
  cron: '47 8 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-amzn2-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k22
  cron: '37 18 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k22-ko23
  cron: '7 6 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k22-ko24
  cron: '48 5 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k23
  cron: '55 4 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k23-ko23
  cron: '38 19 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k23-ko24
  cron: '29 0 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k24
  cron: '48 23 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k24-ko24
  cron: '29 0 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-deb10-k25
  cron: '42 9 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-deb10-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k22
  cron: '0 8 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k22-ko23
  cron: '54 1 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k22-ko24
  cron: '29 2 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k23
  cron: '58 6 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k23-ko23
  cron: '35 4 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k23-ko24
  cron: '32 15 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k24
  cron: '33 21 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k24-ko24
  cron: '44 15 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-flatcar-k25
  cron: '27 19 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-flatcar-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k22
  cron: '21 14 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k22-ko23
  cron: '3 10 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k22-ko24
  cron: '8 1 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k23
  cron: '15 0 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k23-ko23
  cron: '6 23 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k23-ko24
  cron: '25 4 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k24
  cron: '8 19 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k24-ko24
  cron: '33 20 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-rhel8-k25
  cron: '26 5 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-rhel8-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k22
  cron: '55 4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k22-ko23
  cron: '37 12 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k22-ko24
  cron: '50 7 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k23
  cron: '1 2 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k23-ko23
  cron: '28 17 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k23-ko24
  cron: '43 18 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k24
  cron: '22 1 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k24-ko24
  cron: '19 18 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2004-k25
  cron: '44 23 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2004-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k22
  cron: '38 13 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k22-ko23
  cron: '26 19 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k22-ko24
  cron: '13 8 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k23
  cron: '20 3 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k23-ko23
  cron: '27 22 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k23-ko24
  cron: '8 5 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k24
  cron: '43 8 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k24-ko24
  cron: '44 21 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium-etcd"}
- name: e2e-kops-grid-cilium-etcd-u2204-k25
  cron: '57 14 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=cilium-etcd --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium-etcd
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-etcd-u2204-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k22
  cron: '51 9 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k22-ko23
  cron: '31 4 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k22-ko24
  cron: '0 7 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k23
  cron: '41 15 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k23-ko23
  cron: '2 17 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k23-ko24
  cron: '53 2 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k24
  cron: '2 20 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k24-ko24
  cron: '57 18 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k25
  cron: '28 2 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k22
  cron: '18 16 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k22-ko23
  cron: '30 17 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k22-ko24
  cron: '33 10 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k23
  cron: '20 14 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k23-ko23
  cron: '39 20 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k23-ko24
  cron: '16 7 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k24
  cron: '19 21 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k24-ko24
  cron: '4 7 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k25
  cron: '25 3 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k22
  cron: '35 3 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k22-ko23
  cron: '51 16 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k22-ko24
  cron: '48 3 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k23
  cron: '21 5 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k23-ko23
  cron: '54 21 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k23-ko24
  cron: '17 6 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k24
  cron: '50 6 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k24-ko24
  cron: '53 14 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-flatcar, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k25
  cron: '8 16 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-beta-3402.1.0-hvm' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --validation-wait=20m \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k22
  cron: '42 12 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k22-ko23
  cron: '34 5 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k22-ko24
  cron: '1 14 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k23
  cron: '8 10 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k23-ko23
  cron: '27 8 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k23-ko24
  cron: '16 11 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k24
  cron: '7 17 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k24-ko24
  cron: '32 3 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k25
  cron: '49 23 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k22
  cron: '48 22 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k22-ko23
  cron: '48 19 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k22-ko24
  cron: '35 8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k23
  cron: '58 0 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k23-ko23
  cron: '45 22 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k23-ko24
  cron: '18 5 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k24
  cron: '9 19 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k24-ko24
  cron: '6 5 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k25
  cron: '23 21 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k22
  cron: '33 23 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k22-ko23
  cron: '15 4 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k22-ko24
  cron: '36 15 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k23
  cron: '47 9 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k23-ko23
  cron: '18 9 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k23-ko24
  cron: '33 18 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k24
  cron: '12 18 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k24-ko24
  cron: '57 18 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2204-k25
  cron: '14 4 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2204-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k22
  cron: '49 7 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k22-ko23
  cron: '0 3 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k22-ko24
  cron: '7 16 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k23
  cron: '55 17 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k23-ko23
  cron: '21 6 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k23-ko24
  cron: '34 13 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k24
  cron: '32 2 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k24-ko24
  cron: '50 5 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-amzn2, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k25
  cron: '10 12 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-kernel-5.10-hvm-2.0.20221004.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k22
  cron: '36 14 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k22-ko23
  cron: '9 6 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k22-ko24
  cron: '58 21 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k23
  cron: '42 0 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k23-ko23
  cron: '20 3 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k23-ko24
  cron: '11 8 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k24
  cron: '17 3 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k24-ko24
  cron: '3 0 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-deb10, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k25
  cron: '3 5 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20220911-1135' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k22
  cron: '40 10 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k22-ko23
  cron: '41 10 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k22-ko24
  cron: '50 17 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k23
  cron: '26 12 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k23-ko23
  cron: '52 23 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k23-ko24
  cron: '15 4 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k24
  cron: '1 15 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k24-ko24
  cron: '15 4 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-rhel8, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k25
  cron: '7 1 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.7.0_HVM-20221101-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k22
  cron: '10 16 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k22-ko23
  cron: '3 4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k22-ko24
  cron: '24 15 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k23
  cron: '44 6 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k23-ko23
  cron: '46 17 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k23-ko24
  cron: '45 10 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k24
  cron: '19 13 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k24-ko24
  cron: '17 10 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2004, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k25
  cron: '21 19 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20221018' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k25

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k22
  cron: '43 1 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k22

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k22-ko23
  cron: '40 11 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k22-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k22-ko24
  cron: '11 8 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.22, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k22-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k23
  cron: '21 23 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.23", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k23-ko23
  cron: '45 22 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.23/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.23'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.23, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k23-ko23

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k23-ko24
  cron: '50 5 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.23, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k23-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k24
  cron: '2 20 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": "1.24", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k24-ko24
  cron: '10 13 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.24/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.24'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.24, kops-distro-u2204, kops-grid, kops-k8s-1.24, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k24-ko24

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2204", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2204-k25
  cron: '8 18 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20221101.1' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2204
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2204, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2204-k25

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-gce-u2004-k22
  cron: '39 3-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=kubenet --container-runtime=containerd --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-u2004-k22

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-gce-u2004-k23
  cron: '53 5-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=kubenet --container-runtime=containerd --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-u2004-k23

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-gce-u2004-k24
  cron: '58 6-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=kubenet --container-runtime=containerd --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-u2004-k24

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-gce-u2004-k25
  cron: '8 0-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=kubenet --container-runtime=containerd --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-u2004-k25

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-gce-calico-u2004-k22
  cron: '6 3-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=calico --container-runtime=containerd --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-calico-u2004-k22

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-gce-calico-u2004-k23
  cron: '0 5-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=calico --container-runtime=containerd --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-calico-u2004-k23

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-gce-calico-u2004-k24
  cron: '3 6-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=calico --container-runtime=containerd --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-calico-u2004-k24

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-gce-calico-u2004-k25
  cron: '41 0-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=calico --container-runtime=containerd --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-calico-u2004-k25

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-gce-cilium-u2004-k22
  cron: '28 1-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=cilium --container-runtime=containerd --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-cilium-u2004-k22

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-gce-cilium-u2004-k23
  cron: '46 7-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=cilium --container-runtime=containerd --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-cilium-u2004-k23

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-gce-cilium-u2004-k24
  cron: '25 4-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=cilium --container-runtime=containerd --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-cilium-u2004-k24

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-gce-cilium-u2004-k25
  cron: '31 2-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=cilium --container-runtime=containerd --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-cilium-u2004-k25

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.22", "kops_channel": "alpha", "kops_version": null, "networking": "gce"}
- name: e2e-kops-grid-gce-gce-u2004-k22
  cron: '49 3-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=gce --container-runtime=containerd --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.22.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.22.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.22'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: gce
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.22, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-gce-u2004-k22

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.23", "kops_channel": "alpha", "kops_version": null, "networking": "gce"}
- name: e2e-kops-grid-gce-gce-u2004-k23
  cron: '31 5-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=gce --container-runtime=containerd --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.23.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.23.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.23'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: gce
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.23, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-gce-u2004-k23

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.24", "kops_channel": "alpha", "kops_version": null, "networking": "gce"}
- name: e2e-kops-grid-gce-gce-u2004-k24
  cron: '36 6-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=gce --container-runtime=containerd --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.24.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.24.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.24'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: gce
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.24, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-gce-u2004-k24

# {"cloud": "gce", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--gce-service-account=default", "k8s_version": "1.25", "kops_channel": "alpha", "kops_version": null, "networking": "gce"}
- name: e2e-kops-grid-gce-gce-u2004-k25
  cron: '46 0-23/8 * * *'
  labels:
    preset-k8s-ssh: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=gce \
          --create-args="--channel=alpha --networking=gce --container-runtime=containerd --gce-service-account=default" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.25.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.25.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/ssh-key-secret/ssh-private
      - name: KUBE_SSH_USER
        value: prow
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20221109-489d560851-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: gce
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --gce-service-account=default
    test.kops.k8s.io/k8s_version: '1.25'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: gce
    testgrid-dashboards: kops-distro-u2004, kops-gce, kops-grid, kops-k8s-1.25, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-gce-gce-u2004-k25
